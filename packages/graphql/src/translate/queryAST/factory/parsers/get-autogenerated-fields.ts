/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import type { ConcreteEntityAdapter } from "../../../../schema-model/entity/model-adapters/ConcreteEntityAdapter";
import type { RelationshipAdapter } from "../../../../schema-model/relationship/model-adapters/RelationshipAdapter";
import { IdField } from "../../ast/input-fields/IdField";
import { TimestampField } from "../../ast/input-fields/TimestampField";
import { isConcreteEntity } from "../../utils/is-concrete-entity";

export function getAutogeneratedFields(
    target: ConcreteEntityAdapter | RelationshipAdapter
): (IdField | TimestampField)[] {
    const attachedTo = isConcreteEntity(target) ? "node" : "relationship";
    const autoGeneratedFields: (IdField | TimestampField)[] = [];
    for (const attribute of target.attributes.values()) {
        if (attribute.timestampCreateIsGenerated()) {
            autoGeneratedFields.push(new TimestampField(attribute.name, attribute, attachedTo));
        }
        if (attribute.annotations.id) {
            autoGeneratedFields.push(new IdField(attribute.name, attribute, attachedTo));
        }
    }
    return autoGeneratedFields;
}
