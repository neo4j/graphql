/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable new-cap */
import { ApolloServer } from "apollo-server";
import { driver, auth } from "neo4j-driver";
import makeAugmentedSchema from "../../src/api/make-augmented-schema";

const typeDefs = `
            type Actor {
                name: String
                movies: [Movie] @relation(type: "ACTED_IN", direction: "IN")
            }


            type Person {
                name: String
            }

            type Movie {
                id: ID
                title: String
                actors: [Actor]! @relation(type: "ACTED_IN", direction: "OUT")
                mainActor: Actor @relation(type: "MAIN_ACTOR", direction: "OUT")
                people: [Person] @cypher(statement: """
                    MATCH (p:Person)
                    RETURN p
                    """)
            }
        `;

const schema = makeAugmentedSchema({
    typeDefs,
});

const { NEO4J_URI = "neo4j://localhost:7687/neo4j", NEO4J_USER = "admin", NEO4J_PASSWORD = "password" } = process.env;

// Create a database driver instance
// @ts-ignore
const d = new driver(NEO4J_URI, auth.basic(NEO4J_USER, NEO4J_PASSWORD));

// generated by neo4j-graphql-js's makeAugmentedSchema
const server = new ApolloServer({
    context: { driver: d },
    schema: schema.schema,
});

server.listen().then(({ url }) => {
    console.log(`ğŸš€ Server ready at ${url}`);
});
