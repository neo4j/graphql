name: "Pull Request"

on:
  pull_request:
    branches:
      - dev
      - master
    paths-ignore:
      - "docs/**"

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable

  reviewdog-eslint:
    needs:
      - cache-dependencies

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - uses: reviewdog/action-eslint@v1
        with:
          fail_on_error: true
          eslint_flags: "."

  package-tests:
    uses: ./.github/workflows/reusable-package-tests.yml

  neo-push-tests:
    needs:
      - cache-dependencies

    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:latest
        env:
          NEO4J_AUTH: neo4j/password
          NEO4JLABS_PLUGINS: '["apoc"]'
        ports:
          - 7687:7687

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Run neo-push tests
        run: yarn --cwd examples/neo-push/server run test
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: password
          NEO_URL: bolt://localhost:7687

  typescript-changes:
    runs-on: ubuntu-latest

    outputs:
      typescript: ${{ steps.filter.outputs.typescript }}
      typescript_files: ${{ steps.filter.outputs.typescript_files }}

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: |
            typescript:
              - added|modified: 'packages/**/*.ts'

  license-header-check:
    needs: typescript-changes
    if: ${{ needs.typescript-changes.outputs.typescript == 'true' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.17.0"
      - name: Install addlicense
        run: go install github.com/google/addlicense@latest
      - name: Run addlicense
        run: addlicense -f ./addlicense -check ${{ needs.typescript-changes.outputs.typescript_files }}

  unit-tests:
    needs:
      - cache-dependencies

    strategy:
      fail-fast: false
      matrix:
        package:
          - graphql
          - ogm
          - introspector
        graphql-version:
          - "^15.0.0"
          - "^16.0.0"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Overwrite GraphQL version
        run: yarn up --exact graphql@${{ matrix.graphql-version }}
      - name: Run packages/${{ matrix.package }} unit tests
        run: yarn run test:unit --coverage
        working-directory: packages/${{ matrix.package }}
      - name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: unit-coverage-${{ matrix.package }}
          path: packages/${{ matrix.package }}/coverage/

  unit-tests-plugins:
    needs:
      - cache-dependencies

    strategy:
      fail-fast: false
      matrix:
        package:
          - graphql-plugin-auth
        graphql-version:
          - "^15.0.0"
          - "^16.0.0"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Overwrite GraphQL version
        run: yarn up --exact graphql@${{ matrix.graphql-version }}
      - name: Run packages/plugins/${{ matrix.package }} unit tests
        run: yarn run test:unit --coverage
        working-directory: packages/plugins/${{ matrix.package }}
      - name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: unit-coverage-${{ matrix.package }}
          path: packages/plugins/${{ matrix.package }}/coverage/

  api-library-tests:
    uses: ./.github/workflows/reusable-api-library-tests.yml

  # nextjs-app-setup:
  #   uses: ./.github/workflows/reusable-nextjs-app-setup.yml

  toolbox-tests:
    uses: ./.github/workflows/reusable-toolbox-tests.yml

  integration-tests-on-prem:
    needs:
      - cache-dependencies

    strategy:
      fail-fast: false
      matrix:
        package:
          - graphql
          - ogm
          - introspector
        neo4j-version:
          - 4.2.9
          - 4.2
          - 4.3.2
          - 4.3
          - 4.4
        graphql-version:
          - "^15.0.0"
          - "^16.0.0"

    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:${{ matrix.neo4j-version }}-enterprise
        env:
          NEO4J_AUTH: neo4j/password
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
        ports:
          - 7687:7687

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Overwrite GraphQL version
        run: yarn up --exact graphql@${{ matrix.graphql-version }}
      - name: Run @neo4j/graphql integration tests and move coverage
        run: |
          yarn test:int --coverage
          mv coverage coverage-${{ matrix.neo4j-version }}
        working-directory: packages/${{ matrix.package }}
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: password
          NEO_URL: bolt://localhost:7687
      - name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: integration-coverage-${{ matrix.package }}
          path: packages/${{ matrix.package }}/coverage-${{ matrix.neo4j-version }}/
