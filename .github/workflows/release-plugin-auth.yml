name: "Release (Auth Plugin)"

on:
  push:
    branches:
      - release/plugin-auth/*
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn

  unit-tests:
    needs:
      - cache-dependencies

    strategy:
      matrix:
        package:
          - graphql-plugin-auth

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn
      - name: Run packages/${{ matrix.package }} unit tests
        run: yarn run test:unit --coverage
        working-directory: packages/${{ matrix.package }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./packages/${{ matrix.package }}/coverage/
          flags: ${{ matrix.package }},unit
          fail_ci_if_error: true

  integration-tests-on-prem:
    needs:
      - cache-dependencies

    strategy:
      matrix:
        package:
          - graphql
        neo4j-version:
          - 4.2.9
          - 4.2
          - 4.3.2
          - 4.3
          - 4.4

    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:${{ matrix.neo4j-version }}-enterprise
        env:
          NEO4J_AUTH: neo4j/testpassword
          NEO4JLABS_PLUGINS: '["apoc"]'
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
        ports:
          - 7687:7687

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn
      - name: Run @neo4j/graphql integration tests and move coverage
        run: |
          yarn test:int --coverage
          mv coverage coverage-${{ matrix.neo4j-version }}
        working-directory: packages/${{ matrix.package }}
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: testpassword
          NEO_URL: bolt://localhost:7687

  aura-teardown:
    needs:
      - cache-dependencies

    strategy:
      matrix:
        aura-instance:
          - free
          - professional

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn
      - name: Install ts-node and typescript
        run: npm install -g ts-node typescript
      - name: Uppercase instance name
        run: |
          lowercase_instance=${{ matrix.aura-instance }}
          echo "AURA_URI_SECRET=AURA_${lowercase_instance^^}_URI" >>"${GITHUB_ENV}"
          echo "AURA_PASSWORD_SECRET=AURA_${lowercase_instance^^}_PASSWORD" >>"${GITHUB_ENV}"
      - name: Delete all data in instance
        run: ts-node tests/integration/teardown.ts
        working-directory: packages/graphql
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: ${{ secrets[env.AURA_PASSWORD_SECRET] }}
          NEO_URL: ${{ secrets[env.AURA_URI_SECRET] }}

  integration-tests-aura:
    needs:
      - aura-teardown

    strategy:
      matrix:
        package:
          - graphql
        aura-instance:
          - free
          - professional

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn
      - name: Uppercase instance name
        run: |
          lowercase_instance=${{ matrix.aura-instance }}
          echo "AURA_URI_SECRET=AURA_${lowercase_instance^^}_URI" >>"${GITHUB_ENV}"
          echo "AURA_PASSWORD_SECRET=AURA_${lowercase_instance^^}_PASSWORD" >>"${GITHUB_ENV}"
      - name: Run @neo4j/graphql integration tests
        run: |
          yarn test:int -t '^(?!delete should delete a movie, a single nested actor and another movie they act in|update should delete a nested actor and one of their nested movies, within an update block)' --coverage
          mv coverage coverage-aura-${{ matrix.aura-instance }}
        working-directory: packages/${{ matrix.package }}
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: ${{ secrets[env.AURA_PASSWORD_SECRET] }}
          NEO_URL: ${{ secrets[env.AURA_URI_SECRET] }}

  bump-version:
    needs:
      - unit-tests
      - integration-tests-on-prem
      - aura-teardown
      - integration-tests-aura

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all history so yarn version works
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn
      - name: Extract version from branch name
        id: get-version
        run: |
          version=$(echo ${{ github.ref }} | cut -d/ -f5)
          echo "::set-output name=version::$version"
      - name: Bump @neo4j/graphql-plugin-auth version
        run: yarn version "${{ steps.get-version.outputs.version }}"
        working-directory: packages/graphql-plugin-auth
      - name: Commit and push new version numbers
        run: |
          git config --global user.name 'Neo4j Team GraphQL'
          git config --global user.email 'team-graphql@neotechnology.com'
          git commit -am "Bump @neo4j/graphql-plugin-auth version to ${{ steps.get-version.outputs.version }}"
          git push

  pack:
    needs:
      - bump-version

    strategy:
      matrix:
        package:
          - graphql-plugin-auth

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: release/plugin-auth/${{ needs.bump-version.outputs.version }}
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Install dependencies
        run: yarn
      - name: Build ${{ matrix.package }}
        run: yarn build
        working-directory: packages/${{ matrix.package }}
      - name: Pack ${{ matrix.package }}
        run: npm pack
        working-directory: packages/${{ matrix.package }}
      - name: Archive release tarball
        uses: actions/upload-artifact@v3
        with:
          name: release-tarballs
          path: packages/${{ matrix.package }}/neo4j-${{ matrix.package }}-*.tgz

  npm-publish:
    needs:
      - bump-version
      - pack

    runs-on: ubuntu-latest

    environment:
      name: npm

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release-tarballs
      - name: npm publish
        run: |
          prerelease=$(echo ${{ needs.bump-version.outputs.version }} | cut -d- -f2)

          if [[ "$prerelease" =~ ^(alpha|beta|rc)\..* ]]; then
            tag="next"
          else
            tag="latest"
          fi

          npm config set @neo4j:registry https://registry.npmjs.org
          npm config set //registry.npmjs.org/:_authToken "$NPM_TOKEN"

          for tarball in *.tgz
          do
            npm publish "$tarball" --tag=$tag --access=public
          done
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  merge-tag-push:
    needs:
      - bump-version
      - npm-publish

    runs-on: ubuntu-latest

    environment:
      name: github

    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0
          token: ${{ secrets.NEO4J_TEAM_GRAPHQL_PERSONAL_ACCESS_TOKEN }}
      - name: git config
        run: |
          git config --global user.name 'Neo4j Team GraphQL'
          git config --global user.email 'team-graphql@neotechnology.com'
      - name: git merge
        run: git merge --no-ff origin/release/plugin-auth/${{ needs.bump-version.outputs.version }} --strategy-option theirs
      - name: git tag
        run: |
          git tag -a @neo4j/graphql-plugin-auth@${{ needs.bump-version.outputs.version }} -m "@neo4j/graphql-plugin-auth@${{ needs.bump-version.outputs.version }}"
      - name: git push
        run: git push --follow-tags
      - uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0
          token: ${{ secrets.NEO4J_TEAM_GRAPHQL_PERSONAL_ACCESS_TOKEN }}
      - name: git merge
        run: git merge --no-ff origin/release/plugin-auth/${{ needs.bump-version.outputs.version }} --strategy-option theirs
      - name: git push
        run: git push

  delete-release-branch:
    needs:
      - bump-version
      - merge-tag-push

    runs-on: ubuntu-latest

    environment:
      name: github

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.NEO4J_TEAM_GRAPHQL_PERSONAL_ACCESS_TOKEN }}
      - name: Delete release branch
        run: |
          git config --global user.name 'Neo4j Team GraphQL'
          git config --global user.email 'team-graphql@neotechnology.com'
          git push origin --delete release/plugin-auth/${{ needs.bump-version.outputs.version }}

  changelog:
    needs:
      - bump-version
      - merge-tag-push

    strategy:
      matrix:
        package:
          - graphql-plugin-auth

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Extract prerelease from version
        id: get-prerelease
        run: |
          prerelease=$(echo ${{ needs.bump-version.outputs.version }} | cut -d@ -f3 | cut -d- -f2)
          echo "::set-output name=prerelease::$prerelease"
      - name: Build Changelog
        id: github-release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: "config/release-changelog-builder-action/configuration-plugin-auth.json"
          toTag: "@neo4j/${{ matrix.package }}@${{ needs.bump-version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github-release.outputs.changelog }}
          name: "@neo4j/${{ matrix.package }}@${{ needs.bump-version.outputs.version }}"
          tag_name: "@neo4j/${{ matrix.package }}@${{ needs.bump-version.outputs.version }}"
          prerelease: |
            ${{ startsWith(steps.get-prerelease.outputs.prerelease, 'alpha') }} ||
            ${{ startsWith(steps.get-prerelease.outputs.prerelease, 'beta') }} ||
            ${{ startsWith(steps.get-prerelease.outputs.prerelease, 'rc') }}
