name: "Integration tests (on-prem, Neo4j nightly build)"

on:
  workflow_call:
    inputs:
      disable-coverage-archival:
        description: "Whether or not to archive the test coverage"
        required: false
        default: false
        type: boolean
      AWS_ACCESS_KEY_ID:
        required: true
        description: "AWS Access Key ID"
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: "AWS Secret Access Key"

jobs:
  ecr-login:
    runs-on: ubuntu-latest

    outputs:
      docker_user: ${{ steps.login-to-ecr.outputs.docker_username_535893049302_dkr_ecr_eu_west_1_amazonaws_com }}
      docker_password: ${{ steps.login-to-ecr.outputs.docker_password_535893049302_dkr_ecr_eu_west_1_amazonaws_com }}

    steps:
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2
        id: login-to-ecr
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

  integration-tests:
    needs:
      - ecr-login

    strategy:
      matrix:
        node: ["lts/*", "latest"]
        packages:
          [
            { package: "ogm", shard: 1/1, coverage_name: 1 },
            { package: "introspector", shard: 1/1, coverage_name: 2 },
            { package: "graphql", shard: 1/4, coverage_name: 3 },
            { package: "graphql", shard: 2/4, coverage_name: 4 },
            { package: "graphql", shard: 3/4, coverage_name: 5 },
            { package: "graphql", shard: 4/4, coverage_name: 6 },
          ]
        graphql-version: [
          {
            version: "^15.0.0",
            coverage_path: 15
          },
          {
            version: "^16.0.0",
            coverage_path: 16
          }
        ]

    runs-on: ubuntu-latest

    # services:
    #   neo4j:
    #     image: 535893049302.dkr.ecr.eu-west-1.amazonaws.com/neo4j-dev:nightly-enterprise
    #     credentials:
    #       username: ${{ needs.ecr-login.outputs.docker_user }}
    #       password: ${{ needs.ecr-login.outputs.docker_password }}
    #     env:
    #       NEO4J_AUTH: neo4j/password
    #       NEO4JLABS_PLUGINS: '["apoc"]'
    #       NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
    #     ports:
    #       - 7687:7687

    steps:
      - name: Check out repository code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setting up Node.js with version ${{ matrix.node }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Login to ECR
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: 535893049302.dkr.ecr.eu-west-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Pull Neo4j dev image
        run: docker pull 535893049302.dkr.ecr.eu-west-1.amazonaws.com/neo4j-dev:nightly-enterprise
      - name: Start Neo4j container
        run: |
          docker run \
          --name test-dev-neo4j \
          -d \
          --rm \
          -p 7687:7687 \
          --env NEO4J_AUTH=neo4j/password \
          --env NEO4J_PLUGINS=\[\"apoc\"\] \
          --env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \
          535893049302.dkr.ecr.eu-west-1.amazonaws.com/neo4j-dev:nightly-enterprise
      - name: Install dependencies
        run: yarn --immutable
      - name: Overwrite GraphQL version
        run: yarn up --exact graphql@${{ matrix.graphql-version }}
      - name: Run @neo4j/graphql integration tests and move coverage
        run: |
          yarn test:int --shard=${{ matrix.packages.shard }} --coverage
          mv coverage coverage-nightly-${{ matrix.graphql-version.coverage_path }}
        working-directory: packages/${{ matrix.packages.package }}
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: password
          NEO_URL: neo4j://localhost:7687
      - if: ${{ !inputs.disable-coverage-archival && matrix.packages.package == 'graphql' }}
        name: Archive coverage report
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: integration-nightly-coverage-${{ matrix.packages.package }}-${{ matrix.packages.coverage_name }}
          path: packages/${{ matrix.packages.package }}/coverage-nightly-${{ matrix.graphql-version.coverage_path }}/
      - name: Stop Neo4j container
        if: always()
        run: |
          docker ps -a
          docker stop test-dev-neo4j

  merge-integration-tests-results:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - if: ${{ !inputs.disable-coverage-archival }}
        name: Merge Artifacts
        uses: actions/upload-artifact/merge@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: integration-nightly-coverage
          pattern: integration-nightly-coverage-*
