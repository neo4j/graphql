name: "Integration tests (on-prem, Neo4j nightly build)"

on:
  workflow_call:
    inputs:
      disable-code-cov-upload:
        description: "Whether or not to upload the test coverage to CodeCov"
        required: false
        default: false
        type: boolean
    secrets:
      CODECOV_TOKEN:
        required: false
        description: "API token for Codecov, if it is available in the current context"
      AWS_ACCESS_KEY_ID:
        required: true
        description: "AWS Access Key ID"
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: "AWS Secret Access Key"

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  ecr-login:
    runs-on: ubuntu-latest

    outputs:
      docker_user: ${{ steps.login-to-ecr.outputs.docker_username_535893049302_dkr_ecr_eu_west_1_amazonaws_com }}
      docker_password: ${{ steps.login-to-ecr.outputs.docker_password_535893049302_dkr_ecr_eu_west_1_amazonaws_com }}

    steps:
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-to-ecr
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

  integration-tests:
    needs:
      - ecr-login

    strategy:
      matrix:
        node: ["lts/*", "latest"]
        packages:
          [
            { package: "ogm", shard: 1/1 },
            { package: "introspector", shard: 1/1 },
            { package: "graphql", shard: 1/4 },
            { package: "graphql", shard: 2/4 },
            { package: "graphql", shard: 3/4 },
            { package: "graphql", shard: 4/4 },
          ]
        graphql-version:
          - "^15.0.0"
          - "^16.0.0"

    runs-on: ubuntu-latest

    # services:
    #   neo4j:
    #     image: 535893049302.dkr.ecr.eu-west-1.amazonaws.com/neo4j-dev:nightly-enterprise
    #     credentials:
    #       username: ${{ needs.ecr-login.outputs.docker_user }}
    #       password: ${{ needs.ecr-login.outputs.docker_password }}
    #     env:
    #       NEO4J_AUTH: neo4j/password
    #       NEO4JLABS_PLUGINS: '["apoc"]'
    #       NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
    #     ports:
    #       - 7687:7687

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setting up Node.js with version ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: 535893049302.dkr.ecr.eu-west-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Pull Neo4j dev image
        run: docker pull 535893049302.dkr.ecr.eu-west-1.amazonaws.com/neo4j-dev:nightly-enterprise
      - name: Start Neo4j container
        run: |
          docker run \
          --name test-dev-neo4j \
          -d \
          --rm \
          -p 7687:7687 \
          --env NEO4J_AUTH=neo4j/password \
          --env NEO4J_PLUGINS=\[\"apoc\"\] \
          --env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \
          535893049302.dkr.ecr.eu-west-1.amazonaws.com/neo4j-dev:nightly-enterprise
      - name: Install dependencies
        run: yarn --immutable
      - name: Overwrite GraphQL version
        run: yarn up --exact graphql@${{ matrix.graphql-version }}
      - name: Run @neo4j/graphql integration tests and move coverage
        run: |
          yarn test:int --shard=${{ matrix.packages.shard }} --coverage
          mv coverage coverage-nightly
        working-directory: packages/${{ matrix.packages.package }}
        env:
          NEO_USER: neo4j
          NEO_PASSWORD: password
          NEO_URL: neo4j://localhost:7687
      - if: ${{ env.CODECOV_TOKEN != '' && !inputs.disable-code-cov-upload && matrix.packages.package == 'graphql' }}
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./packages/${{ matrix.packages.package }}/coverage-nightly/
          flags: ${{ matrix.packages.package }},nightly,integration
          fail_ci_if_error: true
      - if: ${{ env.CODECOV_TOKEN != '' && !inputs.disable-code-cov-upload && matrix.packages.package == 'graphql' }}
        name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: integration-nightly-coverage-${{ matrix.packages.package }}
          path: packages/${{ matrix.packages.package }}/coverage/
      - name: Stop Neo4j container
        if: always()
        run: |
          docker ps -a
          docker stop test-dev-neo4j
